# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_wind_resistance_coef.ipynb.

# %% auto 0
__all__ = ['load_wind_coefficients', 'interpolate_cx']

# %% ../nbs/05_wind_resistance_coef.ipynb 2
import numpy as np
import pandas as pd
from fastcore.test import *
import pkgutil
from io import BytesIO

# %% ../nbs/05_wind_resistance_coef.ipynb 4
def load_wind_coefficients(vessel_type:str #The name of the vessel type. Must be one of 9 options
                     ): #returns a data set with where the first column us angle_of_attack in radians, the second is angle_of_attack in degrees, the subsequent columns names ship states
        
        "Load a wind coefficient table for a generic ship class. Datasets from ITTC"
        
        #This needs to be adapted so that the paths work on any system, using pathlib.path would be a better choice
        res = pkgutil.get_data('pyseatrials', 'wind_coef_data/'+vessel_type+'.csv')
        
        return pd.read_csv(BytesIO(res))
    

# %% ../nbs/05_wind_resistance_coef.ipynb 8
def interpolate_cx(df, #dataframe of the wind resistance dataset
                   relative_wind_direction:float, #The angle of the wind relative to the ship [rads]
                   ship_state:str #The state of the ship the resistance should be evaluated in. Chosen from the columns of the wind resistance datasets
)->float: # The dimensionless wind resistance coefficient
    
    "Find a linearly interpolated value for wind resistance coefficient"
    
    return np.interp(relative_wind_direction, df.angle_of_attack, df[ship_state])
